# -----------------------------------------------------------------------------
# 1) Start from your Python base image
# -----------------------------------------------------------------------------
FROM python:3.13.2-slim

# -----------------------------------------------------------------------------
# 2) Install system dependencies required by Node.js, Playwright, etc.
# -----------------------------------------------------------------------------
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    ca-certificates \
    fonts-liberation \
    libappindicator3-1 \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libcups2 \
    libdbus-1-3 \
    libgdk-pixbuf2.0-0 \
    libnspr4 \
    libnss3 \
    libx11-xcb1 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    xdg-utils \
    libgbm-dev \
    libxshmfence-dev \
    && rm -rf /var/lib/apt/lists/*

# -----------------------------------------------------------------------------
# 3) Install Node.js (example: Node 20)
# -----------------------------------------------------------------------------
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs

# -----------------------------------------------------------------------------
# 4) Install pnpm globally
# -----------------------------------------------------------------------------
RUN npm install -g pnpm

# -----------------------------------------------------------------------------
# 5) Install Node application dependencies (Playwright, etc.)
#    NOTE: Since your package.json and pnpm-lock.yaml are in src/, COPY them from there.
# -----------------------------------------------------------------------------
WORKDIR /usr/src/app

# Copy Node dependency manifests from src/
COPY src/package*.json src/pnpm-lock.yaml ./

RUN pnpm install --frozen-lockfile

# Install Playwright browser(s)
RUN npx playwright install chromium

# Copy the rest of your Node/JS code if needed (including scraper.js, etc.)
# (If you only want to copy the "src" subfolder, you can do `COPY src/ ./src/` instead.)
COPY src/ ./src/

# (Optional) Expose the port if Node listens on 37563
EXPOSE 37563

# -----------------------------------------------------------------------------
# 6) Install Python application dependencies (Celery, etc.)
# -----------------------------------------------------------------------------
WORKDIR /app

COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt

COPY src/ /app/src/
WORKDIR /app/src

# -----------------------------------------------------------------------------
# 7) Default CMD: Start the Celery worker
#    (You can override this later if you want to run `node` instead)
# -----------------------------------------------------------------------------
CMD ["celery", "-A", "celery_task.celery_app", "worker", "--loglevel=info", "--concurrency=8"]
